import asyncio
from telethon import TelegramClient, events

# üîπ ‡§Ö‡§™‡§®‡•á ‡§ü‡•á‡§≤‡•Ä‡§ó‡•ç‡§∞‡§æ‡§Æ ‡§ï‡•ç‡§∞‡•á‡§°‡•á‡§Ç‡§∂‡§ø‡§Ø‡§≤‡•ç‡§∏ ‡§°‡§æ‡§≤‡•á‡§Ç
API_ID = "25057606"
API_HASH = "bb37f3b7d70879d8e650f20d2beb09f6"
BOT_TOKEN = "7668887729:AAFn_5E6V24iIEpqlqT0_n36tP4"

# üîπ ‡§¨‡•â‡§ü ‡§ï‡•ã ‡§á‡§®‡§ø‡§∂‡§ø‡§Ø‡§≤‡§æ‡§á‡§ú‡§º ‡§ï‡§∞‡•á‡§Ç
bot = TelegramClient("reply_forward_bot", API_ID, API_HASH).start(bot_token=BOT_TOKEN)

# üîπ ‡§ü‡•á‡§≤‡•Ä‡§ó‡•ç‡§∞‡§æ‡§Æ ‡§Ø‡•Ç‡§ú‡§º‡§∞‡§®‡•á‡§Æ ‡§ú‡§π‡§æ‡§Å ‡§Æ‡•à‡§∏‡•á‡§ú ‡§´‡•â‡§∞‡§µ‡§∞‡•ç‡§° ‡§π‡•ã‡§Ç‡§ó‡•á (‡§Ü‡§™‡§ï‡§æ ‡§Ö‡§ï‡§æ‡§â‡§Ç‡§ü)
ADMIN_USERNAME = "@KevinfantasyteamKft"

# üîπ ‡§è‡§ï ‡§°‡§ø‡§ï‡•ç‡§∂‡§®‡§∞‡•Ä (dict) ‡§ú‡§π‡§æ‡§Å ‡§Ø‡•Ç‡§ú‡§º‡§∞‡•ç‡§∏ ‡§ï‡•á ‡§Æ‡•à‡§∏‡•á‡§ú ‡§∏‡•ç‡§ü‡•ã‡§∞ ‡§π‡•ã‡§Ç‡§ó‡•á
user_messages = {}

# üîπ ‡§∏‡§≠‡•Ä ‡§®‡§è ‡§Æ‡•à‡§∏‡•á‡§ú ‡§π‡•à‡§Ç‡§°‡§≤‡§∞ (‡§ö‡•à‡§®‡§≤ ‡§ï‡•á ‡§Æ‡•à‡§∏‡•á‡§ú ‡§ï‡•ã ‡§∞‡•ã‡§ï‡•á‡§Ç)
@bot.on(events.NewMessage)
async def handle_message(event):
    if event.is_channel:  # ‡§Ö‡§ó‡§∞ ‡§Æ‡•à‡§∏‡•á‡§ú ‡§ö‡•à‡§®‡§≤ ‡§∏‡•á ‡§Ü‡§Ø‡§æ ‡§π‡•à, ‡§§‡•ã ‡§á‡§∏‡•á ‡§∏‡•ç‡§ï‡§ø‡§™ ‡§ï‡§∞‡•á‡§Ç
        return
    
    sender = await event.get_sender()
    user_id = sender.id  # ‡§Ø‡•Ç‡§ú‡§º‡§∞ ‡§ï‡§æ Telegram ID
    
    if user_id != ADMIN_USERNAME:  # ‡§Ö‡§ó‡§∞ ‡§Æ‡•à‡§∏‡•á‡§ú ‡§Ø‡•Ç‡§ú‡§º‡§∞ ‡§∏‡•á ‡§Ü‡§Ø‡§æ ‡§π‡•à
        # ‡§Æ‡•à‡§∏‡•á‡§ú ‡§ï‡•ã ‡§´‡•â‡§∞‡§µ‡§∞‡•ç‡§° ‡§ï‡§∞‡•á‡§Ç ‡§î‡§∞ ‡§∏‡•ç‡§ü‡•ã‡§∞ ‡§ï‡§∞‡•á‡§Ç
        user_messages[user_id] = event  # ‡§Ø‡•Ç‡§ú‡§º‡§∞ ‡§ï‡§æ ‡§Æ‡•à‡§∏‡•á‡§ú ‡§∏‡•ç‡§ü‡•ã‡§∞ ‡§ï‡§∞‡•á‡§Ç
        await event.forward_to(ADMIN_USERNAME)
        print(f"Message received from {user_id} and forwarded to {ADMIN_USERNAME}")

@bot.on(events.NewMessage(from_users=ADMIN_USERNAME))
async def reply_to_user(event):
    # ‡§ö‡•á‡§ï ‡§ï‡§∞‡•á‡§Ç ‡§ï‡§ø ‡§∞‡§ø‡§™‡•ç‡§≤‡§æ‡§à ‡§ï‡§ø‡§∏‡•Ä ‡§∏‡•ç‡§ü‡•ã‡§∞ ‡§ï‡§ø‡§è ‡§ó‡§è ‡§Ø‡•Ç‡§ú‡§º‡§∞ ‡§Æ‡•à‡§∏‡•á‡§ú ‡§ï‡§æ ‡§ú‡§µ‡§æ‡§¨ ‡§π‡•à ‡§Ø‡§æ ‡§®‡§π‡•Ä‡§Ç
    if event.reply_to and event.reply_to.reply_markup is None:
        original_msg = await event.get_reply_message()
        sender_id = None

        # ‡§ñ‡•ã‡§ú‡•á‡§Ç ‡§ï‡§ø ‡§Ø‡§π ‡§ï‡§ø‡§∏ ‡§Ø‡•Ç‡§ú‡§º‡§∞ ‡§ï‡•á ‡§Æ‡•à‡§∏‡•á‡§ú ‡§ï‡§æ ‡§ú‡§µ‡§æ‡§¨ ‡§π‡•à
        for user_id, user_msg in user_messages.items():
            if user_msg.id == original_msg.id:
                sender_id = user_id
                break

        if sender_id:
            # ‡§Ø‡•Ç‡§ú‡§º‡§∞ ‡§ï‡•ã ‡§∞‡§ø‡§™‡•ç‡§≤‡§æ‡§à ‡§≠‡•á‡§ú‡•á‡§Ç
            await bot.send_message(sender_id, event.text)
            print(f"Replied to {sender_id}: {event.text}")

# üîπ ‡§¨‡•â‡§ü ‡§ï‡•ã 24/7 ‡§ö‡§≤‡§æ‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è
async def main():
    print("Bot is running 24/7...")
    await bot.run_until_disconnected()

# üîπ ‡§¨‡•â‡§ü ‡§∂‡•Å‡§∞‡•Ç ‡§ï‡§∞‡•á‡§Ç
if __name__ == "__main__":
    loop = asyncio.get_event_loop()
    loop.run_until_complete(main())
